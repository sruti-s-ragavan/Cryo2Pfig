'''
def array_gen(sys.argv[1]):
    print "in array_gen(sys.argv[1])"
    h = httplib.HTTPConnection('web.engr.oregonstate.edu')
    headers = {"Content-type": "application/x-www-form-urlencoded", "Accept": "text/plain"}
    h.request('POST', '/~hillc/jsparser/fileIterator.php', '', headers)
    r = h.getresponse()
    global miv_array
    #print r.read()
    miv_array = simplejson.loads(r.read())
    global doc_line_list
    doc_line_list =miv_array.pop()
    doc_line_list = doc_line_list["lengths"]
'''
'''def array_gen(file_list):
    files = " ".join(file_list)
    
    cmd = "./jsparser/converter.js " + files
    response = muterun_js(cmd);
    if response.exitcode == 0:
        response = response.stdout
        if DEBUG == True:
            print response
        # convert string to nested dictionaries, arrays
    #result = ast.literal_eval(response)
        result = json.loads(response)
    return result[0]
    else:
        print sys.stderr.write(response.stderr)
    
    # The following code could be used to run the JS without the use of the Naked framework
    # Instead it requires the subprocess module
    #cmd = "node ../jsparser/converter.js " + user_file
    #process = subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
    #stdout = []
    #while True:
        #line = process.stdout.readline()
        #stdout.append(line)
        #if line == '' and process.poll() != None:
            #break
    #end = ''.join(stdout)
    #print end
    #return end
    '''
''';
file_list = []



for subdir, dirs, files in os.walk(rootdir):
    for file in files:
        file = os.path.join(subdir, file)
        file_list.append(file)
        
response = array_gen(sys.argv[1])
miv_array.append(response)
doc_line_list.append(response["lengths"])
'''
